@namespace Bookish.Client.Shared.Components

@inherits Comment

<div class="columns is-multiline is-paddingless box mb-5 post-item @(IsSub ? "mr-2" : "")">
    @if (DisplayPostTitle)
    {
        <div class="column is-full">
            <div class="columns">
                <div class="column">
                    <label class="has-text-weight-bold">
                        @CommentModel.PostTitle
                    </label>
                </div>
            </div>
        </div>
    }

    @if (IsCollapsed)
    {
        <div class="column is-full" @onclick="@(() => IsCollapsed = false)">
            <span>
                [ + ]
            </span>
            <span class="is-size-7">
                @(CommentModel.Commented_By ?? "anon")  <span title="@CommentModel.Commented_At.ToString()">@GetTimeSincePost()</span>
            </span>
        </div>
    }
    else
    {
        <div class="column is-1">
            <VoteArrows_Component CommentId="CommentModel.Id" Model="CommentModel.Rating"></VoteArrows_Component>
        </div>
        <div class="column is-11">
            <div class="columns is-multiline">
                <div class="column is-full" @onclick="@(() => IsCollapsed = true)">
                    <span>
                        [ - ]
                    </span>
                    <span class="is-size-7">
                        @(CommentModel.Commented_By ?? "anon")  <span title="@CommentModel.Commented_At.ToString()">@GetTimeSincePost()</span>
                    </span>
                </div>
                <div class="column is-full">
                    <p>
                        @CommentModel.Body
                    </p>
                </div>
                <div class="column is-full">
                    @if (!DisplayPostTitle)
                    {
                        <a class="is-pulled-left" @onclick="@(() => IsReplying = !IsReplying)">reply</a>
                        @if (CommentModel.Comments != null && CommentModel.Comments.Count() > 0)
                        {
                            <a class="ml-2 is-pulled-left" @onclick="@(() => IsHidingChildren = !IsHidingChildren)">
                                @(IsHidingChildren ? "show" : "hide") @CommentModel.Comments.Count child comments
                            </a>
                        }
                    }
                    else
                    {
                        <a class="is-pulled-left" href="/Post/View/@(CommentModel.Post_Id)">
                            view post
                        </a>
                    }
                </div>

                @if (IsReplying)
                {
                    <div class="column is-full">
                        <textarea class="textarea" @bind="CommentBody"></textarea>
                    </div>
                    <div class="column is-full">
                        <button class="button is-success" @onclick="AddComment">Add Comment</button>
                    </div>
                }

                @if (CommentModel.Comments != null && !IsHidingChildren)
                {
                    @foreach (CommentModel comment in CommentModel.Comments)
                    {
                        <div class="column is-full">
                            <Comment_Component CommentModel="comment" IsSub="true"></Comment_Component>
                        </div>
                    }
                }

                @if (CommentModel.Comments != null && CommentModel.Comments.Count < CommentModel.TotalComments)
                {
                    <div class="column">
                        <a @onclick="LoadRemaining">
                            load @((CommentModel.TotalComments - CommentModel.Comments.Count()).ToString()) comments
                        </a>
                    </div>
                }
            </div>
        </div>
    }

</div>
